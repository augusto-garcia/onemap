// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// est_hmm_out
RcppExport SEXP est_hmm_out(SEXP geno_R, SEXP error_R, SEXP type_R, SEXP phase_R, SEXP rf_R, SEXP verbose_R, SEXP tol_R);
RcppExport SEXP _onemap_est_hmm_out(SEXP geno_RSEXP, SEXP error_RSEXP, SEXP type_RSEXP, SEXP phase_RSEXP, SEXP rf_RSEXP, SEXP verbose_RSEXP, SEXP tol_RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type geno_R(geno_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type error_R(error_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type type_R(type_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type phase_R(phase_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type rf_R(rf_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type verbose_R(verbose_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tol_R(tol_RSEXP);
    rcpp_result_gen = Rcpp::wrap(est_hmm_out(geno_R, error_R, type_R, phase_R, rf_R, verbose_R, tol_R));
    return rcpp_result_gen;
END_RCPP
}
